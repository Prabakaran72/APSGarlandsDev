{"ast":null,"code":"var _jsxFileName = \"/Users/santhiladatabot/Documents/Flowers/src/component/options/options.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Options = () => {\n  _s();\n  const weightOptions = [{\n    value: '',\n    name: 'Please Select'\n  }, {\n    value: 'gram',\n    name: 'Gram'\n  }, {\n    value: 'kilogram',\n    name: 'Kilogram'\n  }];\n  const colorOptions = [{\n    value: '',\n    name: 'Please Select'\n  }, {\n    value: 'red',\n    name: 'Red'\n  }, {\n    value: 'blue',\n    name: 'Blue'\n  }, {\n    value: 'black',\n    name: 'Black'\n  }];\n  const sizeOptions = [{\n    value: '',\n    name: 'Please Select'\n  }, {\n    value: 'dimension',\n    name: 'Dimensions'\n  }];\n  const [firstOption, setFirstOption] = useState([{\n    value: 'weight',\n    name: 'Weight'\n  }, {\n    value: 'color',\n    name: 'Color'\n  }, {\n    value: 'size',\n    name: 'Size'\n  }]);\n  const [secondOption, setSecondOption] = useState([weightOptions]);\n  const handleChange = (e, index) => {\n    const selectedValue = e.target.value;\n\n    // Create a copy of the secondOption state\n    const updatedSecondOption = [...secondOption];\n\n    // If \"Please Select\" is selected, set it as the only option\n    if (selectedValue === '') {\n      updatedSecondOption[index] = weightOptions; // or colorOptions or sizeOptions\n    } else {\n      updatedSecondOption[index] = weightOptions.filter(option => option.value === selectedValue);\n    }\n    setSecondOption(updatedSecondOption);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Options\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container structure\",\n      children: firstOption.map((item, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row input-align\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: item.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex\",\n          children: [/*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"form-control\",\n            value: secondOption[i][0].value,\n            onChange: e => handleChange(e, i),\n            children: secondOption[i].map((option, j) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: option.value,\n              children: option.name\n            }, j, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this)]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(Options, \"6b+3eWCh8bLftACgC/NUf2HXynI=\");\n_c = Options;\nexport default Options;\nvar _c;\n$RefreshReg$(_c, \"Options\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Options","_s","weightOptions","value","name","colorOptions","sizeOptions","firstOption","setFirstOption","secondOption","setSecondOption","handleChange","e","index","selectedValue","target","updatedSecondOption","filter","option","className","children","map","item","i","fileName","_jsxFileName","lineNumber","columnNumber","onChange","j","type","_c","$RefreshReg$"],"sources":["/Users/santhiladatabot/Documents/Flowers/src/component/options/options.js"],"sourcesContent":["import React, { useState } from 'react';\n\nconst Options = () => {\n  const weightOptions = [\n    { value: '', name: 'Please Select' },\n    { value: 'gram', name: 'Gram' },\n    { value: 'kilogram', name: 'Kilogram' },\n  ];\n\n  const colorOptions = [\n    { value: '', name: 'Please Select' },\n    { value: 'red', name: 'Red' },\n    { value: 'blue', name: 'Blue' },\n    { value: 'black', name: 'Black' },\n  ];\n\n  const sizeOptions = [\n    { value: '', name: 'Please Select' },\n    { value: 'dimension', name: 'Dimensions' },\n  ];\n\n  const [firstOption, setFirstOption] = useState([\n    { value: 'weight', name: 'Weight' },\n    { value: 'color', name: 'Color' },\n    { value: 'size', name: 'Size' },\n  ]);\n\n  const [secondOption, setSecondOption] = useState([weightOptions]);\n\n  const handleChange = (e, index) => {\n    const selectedValue = e.target.value;\n\n    // Create a copy of the secondOption state\n    const updatedSecondOption = [...secondOption];\n\n    // If \"Please Select\" is selected, set it as the only option\n    if (selectedValue === '') {\n      updatedSecondOption[index] = weightOptions; // or colorOptions or sizeOptions\n    } else {\n      updatedSecondOption[index] = weightOptions.filter((option) => option.value === selectedValue);\n    }\n\n    setSecondOption(updatedSecondOption);\n  };\n\n  return (\n    <div className=\"Options\">\n      <div className=\"container structure\">\n        {firstOption.map((item, i) => (\n          <div key={i} className=\"row input-align\">\n            <h3>{item.name}</h3>\n            <div className=\"d-flex\">\n              <select\n                className=\"form-control\"\n                value={secondOption[i][0].value}\n                onChange={(e) => handleChange(e, i)}\n              >\n                {secondOption[i].map((option, j) => (\n                  <option key={j} value={option.value}>\n                    {option.name}\n                  </option>\n                ))}\n              </select>\n              <input type=\"text\" className=\"form-control\" />\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Options;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}